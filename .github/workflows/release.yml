name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Set up Python 3.11
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Run quality checks
        run: |
          uv run ruff check --fix .
          uv run ruff format --check .
          uv run mypy .

  docker-build:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cddsab/jira2solidtime
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=beta,enable=${{ contains(github.ref, 'beta') }}
            type=raw,value=rc,enable=${{ contains(github.ref, 'rc') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  github-release:
    name: Create GitHub Release
    needs: [test, docker-build]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: release-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}

          # Generate release notes
          cat > release_notes.md << EOF
          ## 🚀 Release v${VERSION}

          ### Installation Options

          **Docker:**
          \`\`\`bash
          docker run -d \\
            -p 8080:8080 \\
            -v \$(pwd)/config.json:/app/config.json \\
            -v app-data:/app/data \\
            cddsab/jira2solidtime:${VERSION}
          \`\`\`

          **Docker Compose:**
          \`\`\`bash
          curl -O https://github.com/${{ github.repository }}/releases/download/v${VERSION}/docker-compose.yml
          docker-compose up -d
          \`\`\`

          ### What's New

          For detailed changes, see the commit history on GitHub.

          ### Docker Image

          - 🐳 **Docker**: \`cddsab/jira2solidtime:${VERSION}\`
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'rc') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}